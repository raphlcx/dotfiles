#!/usr/bin/env bash

USAGE="
Backup files to an archive, and encrypt it.

Usage:

  $(basename "$0") [options]

Options:

  -skipdoc      Skip backing up documents
  -skipkey      Skip backing up keys
  -h            Show this help message
"
readonly USAGE

# On macOS, use Homebrew-installed OpenSSL over macOS default
# LibreSSL. The latter is outdated most of the time.
if [ "$(uname)" == "Darwin" ]; then
  OPENSSL="/usr/local/Cellar/openssl@1.1/1.1.1g/bin/openssl"
else
  OPENSSL="openssl"
fi
readonly OPENSSL

# Output directory
readonly OUTPUTDIRPATH="$HOME/Downloads"

# Timestamp for backup
UNIXEPOCH=$(date +%s)
readonly UNIXEPOCH

_die() {
  local error
  error="$1"
  echo "$error"
  exit 1
}

_prepare() {
  mkdir -p "$OUTPUTDIRPATH"
}

_backup_documents() {
  local TARGETS
  local ARCHIVEFILEPATH
  local item
  local keyid

  TARGETS="$HOME/Documents"
  ARCHIVEFILEPATH="$OUTPUTDIRPATH/backup-$UNIXEPOCH.tar.gz.gpg"

  echo "Archiving files and directories:"
  for item in $TARGETS; do
    echo "  $item"
  done

  keyid=C79BB264798E212BBE44768BC62C4934FE552616

  echo "Storing archive to $ARCHIVEFILEPATH ..."
  #shellcheck disable=SC2086
  tar cz $TARGETS 2>/dev/null \
    | gpg --default-key "$keyid" -se -r "$keyid" > "$ARCHIVEFILEPATH"
}

_backup_keys() {
  local GNUPGPATH
  local TARGETS
  local ARCHIVEFILE
  local DIGESTFILE
  local item

  echo "Exporting GPG keys ..."

  GNUPGPATH="$HOME/.gnupg-export"
  mkdir -p "$GNUPGPATH"
  gpg --export-secret-keys > "$GNUPGPATH/priv.asc"
  gpg --export > "$GNUPGPATH/pub.asc"
  gpg --export-ownertrust > "$GNUPGPATH/trust.asc"

  TARGETS="$GNUPGPATH $HOME/.mutt $HOME/.ssh"
  ARCHIVEFILE="keys-$UNIXEPOCH.tar.gz.enc"
  DIGESTFILE="$ARCHIVEFILE.sum"

  # Using pushd so sha512sum generates checksum for file without
  # embedding the full path of the file in the checksum file
  pushd "$OUTPUTDIRPATH" >/dev/null || _die "pushd failed"

  echo "Archiving keys:"
  for item in $TARGETS; do
    echo "  $item"
  done

  echo "Storing archive to $OUTPUTDIRPATH/$ARCHIVEFILE ..."
  #shellcheck disable=SC2086
  tar cz $TARGETS 2>/dev/null \
    | "$OPENSSL" enc -aes-256-cbc -e -md sha512 -pbkdf2 -iter 20000 > "$ARCHIVEFILE"

  echo "Generating checksum ..."

  sha512sum "$ARCHIVEFILE" > "$DIGESTFILE"

  rm -r "$GNUPGPATH"

  popd >/dev/null || _die "popd failed"
}

while [ -n "$1" ]; do
  case "$1" in
    -skipdoc)
      FLAG_SKIP_DOC=1
      shift
      ;;
    -skipkey)
      FLAG_SKIP_KEY=1
      shift
      ;;
    -h)
      echo "$USAGE"
      exit 0
      ;;
    *)
      _die "$USAGE"
      ;;
  esac
done

_prepare

if [ -z $FLAG_SKIP_KEY ]; then
  _backup_keys
fi

if [ -z $FLAG_SKIP_DOC ]; then
  _backup_documents
fi

echo "Done."
